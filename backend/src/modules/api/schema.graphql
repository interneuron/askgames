type Topic {
    id: Int!
    gameId: Int
    title: String
    text: String
    game: Game
    author: Account
    answers: [Answer]
    comments: [Comment]
}

type Topics {
    entries: [Topic]
    nextPageToken: Int
}

type Game {
    id: Int!
    name: String
}

type Answer {
    id: Int!
    text: String
    rate: Int
    author: Account
    topic: Topic
    comments: [Comment]
}

type Answers {
    entries: [Answer]
    nextPageToken: Int
}

type Comment {
    id: Int!
    text: String
    author: Account
}

type Account {
    id: Int!
    displayName: String
    picture: String
    background: String
    about: String
    socialVk: String
    socialFb: String
    socialYt: String
    socialTw: String
    website: String
    topics: Topics
}

type AuthAccount {
    id: Int!
    displayName: String
    email: String
}

type Session {
    accountId: Int
    token: String
    error: String
}

type Query {
    topic(id: Int!): Topic
    latestTopics(gameId: Int, accountId: Int): [Topic]
    topics(gameId: Int, accountId: Int, nextPageToken: Int): Topics
    answers(accountId: Int, nextPageToken: Int): Answers
    game(id: Int!): Game
    account(id: Int!): Account
    accountByName(name: String!): Account
    authAccount: AuthAccount
}

type FormResult {
    success: Boolean
    error: String
}

input SettingsForm {
    displayName: String!
    about: String
    pictureData: String
}

input RegistrationForm {
    displayName: String!
    email: String!
    password: String!
}

type Mutation {
    createSession(email: String!, password: String!): Session
    createGoogleSession(id: String!, access_token: String!): Session
    destroySession: Boolean
    updateSettings(form: SettingsForm): FormResult
    registration(form: RegistrationForm): Session
}
