type Topic {
    id: Int!
    gameId: Int
    title: String
    text: String
    game: Game
    author: Account
    answers: [TopicAnswer]
    comments: [TopicComment]
}

type Game {
    id: Int!
    name: String
}

type TopicAnswer {
    id: Int!
    text: String
    rate: Int
    author: Account
    comments: [TopicComment]
}

type TopicComment {
    id: Int!
    text: String
    author: Account
}

type Account {
    id: Int!
    name: String
    picture: String
    background: String
    about: String
    socialVk: String
    socialFb: String
    socialYt: String
    socialTw: String
    website: String
    topics: [Topic]
}

type AuthAccount {
    id: Int!
    name: String
    email: String
}

type Session {
    accountId: Int
    token: String
    error: String
}

type Query {
    topic(id: Int!): Topic
    latestTopics(gameId: Int): [Topic]
    game(id: Int!): Game
    account(id: Int!): Account
    accountByName(name: String!): Account
    authAccount: AuthAccount
}

type FormResult {
    success: Boolean
    error: String
}

input SettingsForm {
    about: String
    pictureData: String
}

type Mutation {
    createSession(email: String!, password: String!): Session
    destroySession: Boolean
    updateSettings(form: SettingsForm): FormResult
}
